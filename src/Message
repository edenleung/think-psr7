<?php

declare(strict_types=1);

namespace think\Psr7;

use Psr\Http\Message\ResponseInterface;

class Message
{
    public static function make(ResponseInterface $response)
    {
        $type = 'html';
        $data = (string)$response->getBody();
        $hasContentType = $response->hasHeader('Content-Type');
        if ($hasContentType === true) {
            $contentType = explode('/', $response->getHeaderLine('Content-Type'));
            $type = $contentType[1];

            if ($response->getHeaderLine('Content-Type') === 'application/json') {
                $decode_data = json_decode($data);
                if (gettype($decode_data) == 'object') {
                    $data = json_decode($data, true);
                }
            }
        }

        $headers = $response->getHeaders();
        foreach ($headers as $name => $values) {
            $headers[$name] = implode(", ", $values);
        }
        return \think\Response::create($data, $type, $response->getStatusCode())->header($headers);
    }
}

<?php

declare(strict_types=1);

namespace think\Psr7;

use Psr\Http\Message\ResponseInterface;

class Message
{
    public static function make(ResponseInterface $response)
    {
        $type = 'html';
        $data = (string)$response->getBody();

        $hasContentType = $response->hasHeader('Content-Type');
        if ($hasContentType === true) {
            if (strpos($response->getHeaderLine('Content-Type'), 'json') !== false) {
                $type = 'json';
                $data = json_decode($data, true);
            }

            if (strpos($response->getHeaderLine('Content-Type'), 'xml') !== false) {
                $type = 'xml';
            }

            if (strpos($response->getHeaderLine('Content-Type'), 'javascript') !== false) {
                $type = 'jsonp';
            }
        }

        $headers = $response->getHeaders();
        foreach ($headers as $name => $values) {
            $headers[$name] = implode(", ", $values);
        }

        return \think\Response::create($data, $type, $response->getStatusCode())->header($headers);
    }
}
